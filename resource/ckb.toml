# Config generated by `ckb init` # {{
# see => resource/src/template.rs
# testnet => # Config generated by `ckb init --spec testnet`
# }}

data_dir = "data"

[chain]
# Choose the kind of chains to run, possible values:
# - specs/dev.toml
# - specs/testnet.toml
spec = "specs/dev.toml" # {{
# testnet => spec = "specs/testnet.toml"
# integration => spec = "specs/integration.toml"
# }}

[logger]
filter = "info" # {{
# integration => filter = "info,network=trace,rpc=debug,sync=debug,relay=debug,tx_pool=debug"
# }}
color = true
log_to_file = true # {{
# _ => log_to_file = {log_to_file}
# }}
log_to_stdout = true # {{
# _ => log_to_stdout = {log_to_stdout}
# }}

[sentry]
# set to blank to disable sentry error collection
dsn = "" # {{
# testnet => dsn = "https://48c6a88d92e246478e2d53b5917a887c@sentry.io/1422795"
# }}

[network]
listen_addresses = ["/ip4/0.0.0.0/tcp/8115"] # {{
# _ => listen_addresses = ["/ip4/0.0.0.0/tcp/{p2p_port}"]
# }}
public_addresses = []

# Node connects to nodes listed here to discovery other peers when there's no local stored peers.
# When chain.spec is changed, this usually should also be changed to the bootnodes in the new chain.
bootnodes = [] # {{
# testnet => bootnodes = [\n  # Hangzhou (China)\n  "/ip4/47.111.169.36/tcp/8111/p2p/QmNQ4jky6uVqLDrPU7snqxARuNGWNLgSrTnssbRuy3ij2W",\n  # Ohio (USA)\n  "/ip4/18.217.146.65/tcp/8111/p2p/QmT6DFfm18wtbJz3y4aPNn3ac86N4d4p4xtfQRRPf73frC",\n  # Singapore\n  "/ip4/18.136.60.221/tcp/8111/p2p/QmTt6HeNakL8Fpmevrhdna7J4NzEMf9pLchf1CXtmtSrwb",\n  # London\n  "/ip4/35.176.207.239/tcp/8111/p2p/QmSJTsMsMGBjzv1oBNwQU36VhQRxc2WQpFoRu1ZifYKrjZ",\n]
# }}

reserved_peers = []
reserved_only = false
max_peers = 125
max_outbound_peers = 8
# 2 minutes
ping_interval_secs = 120
# 20 minutes
ping_timeout_secs = 1200
connect_outbound_interval_secs = 15

[rpc]
listen_address = "127.0.0.1:8114" # {{
# _ => listen_address = "127.0.0.1:{rpc_port}"
# }}

# Default is 10MiB = 10 * 1024 * 1024
max_request_body_size = 10485760

# List of API modules: ["Net", "Pool", "Miner", "Chain", "Stats", "Experiment"]
modules = ["Net", "Pool", "Miner", "Chain", "Stats", "Experiment"] # {{
# integration => modules = ["Net", "Pool", "Miner", "Chain", "Experiment", "IntegrationTest"]
# }}

[sync]
verification_level = "Full"
orphan_block_limit = 1024

[tx_pool]
max_pool_size = 10000
max_orphan_size = 10000
max_proposal_size = 10000
max_cache_size = 1000
max_pending_size = 10000
txs_verify_cache_size = 100000

[script]
runner = "Assembly"

[store]
header_cache_size       = 4096
cell_output_cache_size  = 128

# Set the lock script to protect mined CKB.
#
# The `code_hash` identifies different cryptography algorithm. Read the manual
# of the lock script provider about how to generate this config.
#
# CKB provides an secp256k1 implementation, it requires a public key hash in
# the args.
#
# See `ckb cli secp256k1 --help` about how to setup secp256k1 as block assembler lock.
#
# Following is an example output:
#
# [block_assembler]
# code_hash = "0x9e3b3557f11b2b3532ce352bfe8017e9fd11d154c4c7f9b7aaaa1e621b539a08"
# args = ["blake160(compressed_pubkey)"]
