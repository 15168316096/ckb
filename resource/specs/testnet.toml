name = "ckb_testnet"

[genesis]
version = 0
parent_hash = "0x0000000000000000000000000000000000000000000000000000000000000000"
timestamp = 1562997600677
# the difficulty of the block 161029 in rylai-v2
difficulty = "0x9292"
uncles_hash = "0x0000000000000000000000000000000000000000000000000000000000000000"
# run `cargo run cli hashes -b` to get the genesis hash
hash = "0xbd185e5d6a28229206fb7c7b90ead158f7dda0a6783e18dea099dc817bfb94c0"

[genesis.seal]
nonce = 0
proof = [0]

[genesis.genesis_cell]
# $ git log --pretty=tformat:'%C(auto)%h %s <%aN %ad>' --date=iso --no-merges v0.15.0..HEAD | sort -R | head -1
message = "rylai-v5 5a6cdc10 chore: remove duplicated lines <ian 2019-07-08 15:00:53 +0800>"

[genesis.genesis_cell.lock]
code_hash = "0xb35557e7e9854206f7bc13e3c3a7fa4cf8892c84a09237fb0aab40aab3771eee"
args = []

# An array list paths to system cell files, which is absolute or relative to
# the directory containing this config file.
[genesis.system_cells]
files = [
  { bundled = "specs/cells/secp256k1_blake160_sighash_all" }
]

[genesis.system_cells.lock]
code_hash = "0xb35557e7e9854206f7bc13e3c3a7fa4cf8892c84a09237fb0aab40aab3771eee"
args = []

[genesis.bootstrap_lock]
code_hash = "0x94334bdda40b69bae067d84937aa6bbccf8acd0df6626d4b9ac70d4612a11933"
# Lock for developers to run tests
args = ["0x64257f00b6b63e987609fa9be2d0c86d351020fb"]

# Locks for developers to run tests
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x94334bdda40b69bae067d84937aa6bbccf8acd0df6626d4b9ac70d4612a11933"
lock.args = ["0x64257f00b6b63e987609fa9be2d0c86d351020fb"]
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x94334bdda40b69bae067d84937aa6bbccf8acd0df6626d4b9ac70d4612a11933"
lock.args = ["0x3f1573b44218d4c12a91919a58a863be415a2bc3"]
[[genesis.issued_cells]]
capacity = 50_000_000_00000000
lock.code_hash = "0x94334bdda40b69bae067d84937aa6bbccf8acd0df6626d4b9ac70d4612a11933"
lock.args = ["0x57ccb07be6875f61d93636b0ee11b675494627d2"]

[params]
epoch_reward = 1_250_000_00000000
secondary_epoch_reward = 600_000_00000000
max_block_cycles = 10_000_000_000
cellbase_maturity = 10

[pow]
func = "Cuckoo"

[pow.params]
# the 2-log of the graph size, which is the size in bits of the node
# identifiers
edge_bits = 15

# length of the cycle to be found, must be an even number, a minimum of 12 is
# recommended
cycle_length = 12
